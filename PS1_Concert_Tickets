//All Accepted

#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
 
#include <iostream>
#include <bits/stdc++.h>
#include <set>
 
using namespace std;
 
using ll = long long;
#define int ll
 
#define endl '\n'
#define fora(i, a, b) for (int i = int(a); i < int(b); i++)
#define foro(i, b) fora(i, 0, b)
#define forta(i, a, b) for (int i = int(b) - 1; i >= int(a); i--)
#define forto(i, b) forta(i, 0, b)
#define pb push_back
#define ff first
#define sda second
#define all(x) x.begin(), x.end()
 
using pi = pair<int, int>;
using vi = vector<int>;
using vvi = vector<vi>;
 
#define mp make_pair
#define mt make_tuple
 
void init_code()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
 
void solve()
{
    int n, m;
    cin >> n >> m;
    multiset<int> a;
    vi b(m);
    foro(i, n)
    {
        int a1;
        cin >> a1;
        a.insert(a1);
    }
    foro(i, m)
    {
        cin >> b[i];
    }
    int ctr = 0;
    foro(i, m)
    {
        if (a.empty())
        {
            cout << "-1" << endl;
            continue;
        }
        if (a.upper_bound(b[i]) == a.end())
        {
            // ctr++;
            auto it = a.end();
            --it;
            cout << *it << endl;
            a.erase(it);
        }
        else if (a.upper_bound(b[i]) == a.begin())
        {
            cout << "-1" << endl;
            continue;
        }
        else
        {
            // ctr++;
            auto it = a.upper_bound(b[i]);
            --it;
            cout << *it << endl;
            a.erase(it);
        }
    }
}
 
signed main()
{
 
    init_code();
 
    int t = 1;
    // cin >> t;
    while (t--)
    {
        solve();
    }
