// All Accepted

#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")

#include <iostream>
#include <bits/stdc++.h>

using namespace std;

using ll = long long;
#define int ll

#define endl '\n'
#define fora(i, a, b) for (int i = int(a); i < int(b); i++)
#define foro(i, b) fora(i, 0, b)
#define forta(i, a, b) for (int i = int(b) - 1; i >= int(a); i--)
#define forto(i, b) forta(i, 0, b)
#define pb push_back
#define ff first
#define sda second
#define all(x) x.begin(), x.end()

using pi = pair<int, int>;
using vi = vector<int>;
using vvi = vector<vi>;

#define mp make_pair
#define mt make_tuple

void init_code()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}

void solve()
{
    int n;
    cin >> n;
    vi a(n), b(n), c(n);
    foro(i, n)
    {
        cin >> a[i];
        b[i] = a[i] + i;
        c[i] = a[i] - i;
    }
    vi b1(n), c1(n);
    int m = b[0];
    foro(i, n)
    {
        m = max(m, b[i]);
        b1[i] = m;
    }
    m = c[n - 1];
    forto(i, n)
    {
        m = max(m, c[i]);
        c1[i] = m;
    }

    m = 0;
    for (int i = 1; i < n - 1; i++)
    {
        m = max(m, a[i] + c1[i + 1] + b1[i - 1]);
        // cout << m << " ";
    }
    cout << m << endl;
}

signed main()
{

    init_code();

    int t = 1;
    cin >> t;
    while (t--)
    {
        solve();
    }
}

