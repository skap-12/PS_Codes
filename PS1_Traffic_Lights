// All Accepted

#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
 
#include <iostream>
#include <bits/stdc++.h>
#include <set>
 
using namespace std;
 
using ll = long long;
#define int ll
 
#define endl '\n'
#define fora(i, a, b) for (int i = int(a); i < int(b); i++)
#define foro(i, b) fora(i, 0, b)
#define forta(i, a, b) for (int i = int(b) - 1; i >= int(a); i--)
#define forto(i, b) forta(i, 0, b)
#define pb push_back
#define ff first
#define sda second
#define all(x) x.begin(), x.end()
 
using pi = pair<int, int>;
using vi = vector<int>;
using vvi = vector<vi>;
 
#define mp make_pair
#define mt make_tuple
 
void init_code()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
 
void solve()
{
    int x, n;
    cin >> x >> n;
    vi a(n + 2);
    a[0] = 0;
    a[n + 1] = x;
    multiset<int> s, s1;
    s.insert(x);
    s1.insert(0);
    s1.insert(x);
    for (int i = 1; i < n + 1; i++)
    {
        cin >> a[i];
    }
    foro(i, n)
    {
        auto it = s1.lower_bound(a[i + 1]);
        int temp = *it;
        --it;
        int temp1 = *it;
        s.erase(s.find(temp - temp1));
        s.insert(temp - a[i + 1]);
        s.insert(a[i + 1] - temp1);
        it = s.end();
        --it;
        cout << *it << " ";
        s1.insert(a[i + 1]);
    }
}
 
signed main()
{
 
    init_code();
 
    int t = 1;
    // cin >> t;
    while (t--)
    {
        solve();
    }
